{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,SAEA,IAAIE,EAAgB,GAChBC,EAAc,GAElB,MAAMC,EAAcC,SAASC,cAAc,iBACrCC,EAAaF,SAASC,cAAc,0BACpCE,EAAWH,SAASC,cAAc,wBAqExC,SAASG,EAAaC,GACpBC,QAAQC,IAAIF,GACZN,EAAYS,UAAyBH,EAWlCI,KAAIC,IACH,MAAMC,YAAEA,EAAWC,MAAEA,EAAKC,GAAEA,EAAEC,OAAEA,EAAMC,aAAEA,EAAYC,aAAEA,GACpDN,EAEIO,EAAOD,EAAaE,QAAQ,GAClC,IAAIC,EACAC,EACJA,EAAaN,EAAOL,KAAIY,GAAQA,EAAKC,OAAMC,MAAM,EAAG,GAChDT,EAAOU,OAAS,GAClBJ,EAAWK,KAAK,SAElBN,EAAiBC,EAAWM,KAAK,MAMjC,IAAIC,EAAqB,GAMzB,OAJEA,EADkB,OAAhBhB,EACmB,kCAEAA,EAEhB,0CAC0BE,8BACfA,qIAG6Bc,gEACGA,oJAEHA,6DACAA,mJAEAA,6DACAA,4EACjCd,8EAE4Bc,sBAC/Bf,6GAKmBA,wDACWC,qDACAA,kBACnCM,YA/BcJ,EAAaQ,MAAM,EAAG,qCAgChBN,gFAMzB,IAEFS,KAAK,IAlER,MAAME,EAAe5B,SAAS6B,iBAAiB,mBAE/CD,EAAaE,SAAQC,GACnBA,EAAKC,oBAAoB,QAASpC,EAAAqC,kBAEpCL,EAAaE,SAAQC,GAAQA,EAAKG,iBAAiB,QAAStC,EAAAqC,iB,CA3E9D/B,EAAWgC,iBAAiB,SAiD5B,WACEnC,EAAYS,UAAY,IACxBL,EAASgC,UAAUC,OAAO,wBAC1BlC,EAAWiC,UAAUE,IAAI,wBAEzBxC,EAAgByC,KAAKC,MAAMC,aAAaC,QAAQ,kBAGhD,GAFoC,OAAlB5C,GAA4C,OAAlBA,EAE7B,CACb,MAAM6C,EAAe,2HAGrB3C,EAAYS,UAAYkC,C,MAExBtC,EAAaP,E,IA9DjBM,EAAS+B,iBAAiB,SA8B1B,WACEnC,EAAYS,UAAY,IACxBN,EAAWiC,UAAUC,OAAO,wBAC5BjC,EAASgC,UAAUE,IAAI,wBAEvBvC,EAAcwC,KAAKC,MAAMC,aAAaC,QAAQ,gBAG9C,GAFgC,OAAhB3C,GAAwC,OAAhBA,EAE3B,CACX,MAAM6C,EAAa,mIAGnB5C,EAAYS,UAAYmC,C,MAExBvC,EAAaN,E,IAxCjB,WACEC,EAAYS,UAAY,IAExBX,EAAgByC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChD3C,EAAcwC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9C,MAAMG,EAA8B,OAAlB/C,EACZgD,EAA0B,OAAhB/C,EAEhB,GAAI8C,GAAaC,EAAS,CACxB9C,EAAYoC,UAAUC,OAAO,WAC7BlC,EAAWiC,UAAUC,OAAO,wBAC5B,MAAMU,EAAe,2GAGrB/C,EAAYS,UAAYsC,C,CAGrBD,GACHzC,EAAaN,GAGV8C,GACHxC,EAAaP,E,CAxBjBkD,G","sources":["src/library.js","src/js/btn-for-library.js"],"sourcesContent":["import { loader } from './js/loader';\nimport './js/teamModal.js';\n\nimport './js/btn-for-library';\nimport './js/btn-in-modal';\nimport { darkOn } from './js/darkOn';\n","import { onGalleryClick } from './gallery-popular-films';\n\nlet watchedMovies = [];\nlet queueMovies = [];\n\nconst libraryWrap = document.querySelector('.library-list');\nconst watchedBtn = document.querySelector('.library--btn__watched');\nconst queueBtn = document.querySelector('.library--btn__queue');\n\nwatchedBtn.addEventListener('click', onBtnWatchedClick);\nqueueBtn.addEventListener('click', onBtnQueueClick);\n\nonLibraryLinkClick();\n\nfunction onLibraryLinkClick() {\n  libraryWrap.innerHTML = ' ';\n\n  watchedMovies = JSON.parse(localStorage.getItem('watchedMovies'));\n  queueMovies = JSON.parse(localStorage.getItem('queueMovies'));\n  const noWatched = watchedMovies === null;\n  const noQueue = queueMovies === null;\n\n  if (noWatched && noQueue) {\n    libraryWrap.classList.remove('gallery');\n    watchedBtn.classList.remove('library--btn--active');\n    const emptyLibrary = `<div class=\"empty-library\"> \n    <p class=\"empty-library__title\">YOUR LIBRARY IS EMPTY!</p>\n    </div>`;\n    libraryWrap.innerHTML = emptyLibrary;\n  }\n\n  if (!noQueue) {\n    renderMarkup(queueMovies);\n  }\n\n  if (!noWatched) {\n    renderMarkup(watchedMovies);\n  }\n}\n\nfunction onBtnQueueClick() {\n  libraryWrap.innerHTML = ' ';\n  watchedBtn.classList.remove('library--btn--active');\n  queueBtn.classList.add('library--btn--active');\n\n  queueMovies = JSON.parse(localStorage.getItem('queueMovies'));\n  const noQueue = queueMovies === null || queueMovies === '[]';\n\n  if (noQueue) {\n    const emptyQueue = `<div class=\"container empty-library\"> \n        <p class=\"empty-library__title\">NO MOVIES TO WATCH IN QUEUE!</p>\n        </div>`;\n    libraryWrap.innerHTML = emptyQueue;\n  } else {\n    renderMarkup(queueMovies);\n  }\n}\n\nfunction onBtnWatchedClick() {\n  libraryWrap.innerHTML = ' ';\n  queueBtn.classList.remove('library--btn--active');\n  watchedBtn.classList.add('library--btn--active');\n\n  watchedMovies = JSON.parse(localStorage.getItem('watchedMovies'));\n  const noWatched = watchedMovies === null || watchedMovies === '[]';\n\n  if (noWatched) {\n    const emptyWatched = `<div class=\"container empty-library\">\n        <p class=\"empty-library__title\">NO MOVIES IN WATCHED!</p>\n        </div>`;\n    libraryWrap.innerHTML = emptyWatched;\n  } else {\n    renderMarkup(watchedMovies);\n  }\n}\n\nfunction renderMarkup(savedMovies) {\n  console.log(savedMovies);\n  libraryWrap.innerHTML = createMarkup(savedMovies);\n  const galleryItems = document.querySelectorAll('.card-set__item');\n\n  galleryItems.forEach(card =>\n    card.removeEventListener('click', onGalleryClick)\n  );\n  galleryItems.forEach(card => card.addEventListener('click', onGalleryClick));\n}\n\nfunction createMarkup(movies) {\n  return movies\n    .map(movie => {\n      const { poster_path, title, id, genres, release_date, vote_average } =\n        movie;\n\n      const vote = vote_average.toFixed(1);\n      let formatedGenres;\n      let genresList;\n      genresList = genres.map(item => item.name).slice(0, 2);\n      if (genres.length > 2) {\n        genresList.push('Other');\n      }\n      formatedGenres = genresList.join(', ');\n      // const genresList = genres.map(item => item.name).slice(0, 2);\n      // genresList.push('Other');\n\n      // const formatedGenres = genresList.join(', ');\n      const releaseYear = release_date.slice(0, 4);\n      let formatedPosterPath = '';\n      if (poster_path === null) {\n        formatedPosterPath = 'uc4RAVW1T3T29h6OQdr7zu4Blui.jpg';\n      } else {\n        formatedPosterPath = poster_path;\n      }\n      return `\n      <li class=\"card-set__item\" id=\"${id}\">\n      <a href='#' id='${id}' class=\"card-link\">\n       <picture>\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w780/${formatedPosterPath} 1x,\n                   http://image.tmdb.org/t/p/original/${formatedPosterPath} 2x\" media=\"(min-width: 1280px)\" type=\"image/jpeg\" />\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w342/${formatedPosterPath} 1x,\n                    http://image.tmdb.org/t/p/w500/${formatedPosterPath} 2x\" media=\"(min-width: 768px)\" type=\"image/jpeg\" />\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w185/${formatedPosterPath} 1x,\n                    http://image.tmdb.org/t/p/w342/${formatedPosterPath} 2x\" media=\"(max-width: 480px)\" type=\"image/jpeg\" />\n         <img id=\"${id}\n          loading=\"lazy\"\n          src=\"http://image.tmdb.org/t/p/w342/${formatedPosterPath}\"\n          alt=\"${title}\"\n          class=\"card-set__img \"/>\n      </picture>\n      \n    \n      <h3 class=\"card-set__title\">${title}</h3>\n      <div class=\"card-set__description\" id=\"${id}\">\n      <span class=\"card-set__genre flex\" id=\"${id}\">\n          ${formatedGenres} &nbsp| ${releaseYear}\n          <span class=\"vote\"> ${vote}</span>\n      </span>\n      \n      </div>\n      </a>\n      </li>\n      `;\n    })\n    .join('');\n}\n"],"names":["parcelRequire","$eZevs","$bee97886d9609cae$var$watchedMovies","$bee97886d9609cae$var$queueMovies","$bee97886d9609cae$var$libraryWrap","document","querySelector","$bee97886d9609cae$var$watchedBtn","$bee97886d9609cae$var$queueBtn","$bee97886d9609cae$var$renderMarkup","savedMovies","console","log","innerHTML","map","movie","poster_path","title","id","genres","release_date","vote_average","vote","toFixed","formatedGenres","genresList","item","name","slice","length","push","join","formatedPosterPath","galleryItems","querySelectorAll","forEach","card","removeEventListener","onGalleryClick","addEventListener","classList","remove","add","JSON","parse","localStorage","getItem","emptyWatched","emptyQueue","noWatched","noQueue","emptyLibrary","$bee97886d9609cae$var$onLibraryLinkClick"],"version":3,"file":"library.52e32fa8.js.map"}