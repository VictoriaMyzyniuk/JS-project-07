{"mappings":"gfAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,SAEIE,EAAgB,GAChBC,EAAc,GAEZC,EAAcC,SAASC,cAAc,iBACrCC,EAAaF,SAASC,cAAc,0BACpCE,EAAWH,SAASC,cAAc,wBAqExC,SAASG,EAAaC,GACpBN,EAAYO,UAAyBD,EAWlCE,KAAI,SAAAC,GACH,IAIIC,EACAC,EALIC,EACNH,EADMG,YAAaC,EACnBJ,EADmBI,MAAOC,EAC1BL,EAD0BK,GAAIC,EAC9BN,EAD8BM,OAAQC,EACtCP,EADsCO,aAGlCC,EAFJR,EADoDS,aAG5BC,QAAQ,GAGlCR,EAAaI,EAAOP,KAAI,SAAAY,G,OAAQA,EAAKC,I,IAAMC,MAAM,EAAG,GAChDP,EAAOQ,OAAS,GAClBZ,EAAWa,KAAK,SAElBd,EAAiBC,EAAWc,KAAK,MAKjC,IAAMC,EAAcV,EAAaM,MAAM,EAAG,GACtCK,EAAqB,GAMzB,OAJEA,EADkB,OAAhBf,EACmB,kCAEAA,EAEhB,0CAEWgB,OADed,EAAG,+BAIWc,OAH7Bd,EAAG,sIAI6Bc,OADHD,EAAmB,gEAGnBC,OAFGD,EAAmB,oJAGtBC,OADAD,EAAmB,6DAGnBC,OAFAD,EAAmB,mJAGnBC,OADAD,EAAmB,6DAEpDC,OADiCD,EAAmB,4EAGxBC,OAF5Bd,EAAG,8EAGNc,OAD+BD,EAAmB,sBAM/BC,OALnBf,EAAM,6GAMwBe,OADXf,EAAM,wDAEKe,OADAd,EAAG,qDAEtCc,OADmCd,EAAG,kBACbc,OAAzBlB,EAAe,YACKkB,OADKF,EAAY,oCACZE,OAALX,EAAK,gF,IAQhCQ,KAAK,IAlER,IAAMI,EAAe5B,SAAS6B,iBAAiB,mBAE/CD,EAAaE,SAAQ,SAAAC,G,OACnBA,EAAKC,oBAAoB,QAASpC,EAAAqC,e,IAEpCL,EAAaE,SAAQ,SAAAC,G,OAAQA,EAAKG,iBAAiB,QAAStC,EAAAqC,e,IA1E9D/B,EAAWgC,iBAAiB,SAiD5B,WAQE,GAPAnC,EAAYO,UAAY,IACxBH,EAASgC,UAAUC,OAAO,wBAC1BlC,EAAWiC,UAAUE,IAAI,wBAGW,QADpCxC,EAAgByC,KAAKC,MAAMC,aAAaC,QAAQ,oBACc,OAAlB5C,EAE7B,CAIbE,EAAYO,UAHU,0H,MAKtBF,EAAaP,E,IA9DjBM,EAAS+B,iBAAiB,SA8B1B,WAQE,GAPAnC,EAAYO,UAAY,IACxBJ,EAAWiC,UAAUC,OAAO,wBAC5BjC,EAASgC,UAAUE,IAAI,wBAGS,QADhCvC,EAAcwC,KAAKC,MAAMC,aAAaC,QAAQ,kBACU,OAAhB3C,EAE3B,CAIXC,EAAYO,UAHQ,kI,MAKpBF,EAAaN,E,IAxCjB,WACEC,EAAYO,UAAY,IAExBT,EAAgByC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChD3C,EAAcwC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9C,IAAMC,EAA8B,OAAlB7C,EACZ8C,EAA0B,OAAhB7C,EAEhB,GAAI4C,GAAaC,EAAS,CACxB5C,EAAYoC,UAAUC,OAAO,WAC7BlC,EAAWiC,UAAUC,OAAO,wBAI5BrC,EAAYO,UAHU,0G,CAMnBqC,GACHvC,EAAaN,GAGV4C,GACHtC,EAAaP,E,CAxBjB+C,G","sources":["src/library.js","src/js/btn-for-library.js"],"sourcesContent":["import { loader } from './js/loader';\nimport './js/teamModal.js';\n\nimport './js/btn-for-library';\nimport './js/btn-in-modal';\nimport { darkOn } from './js/darkOn';\n","import { onGalleryClick } from './gallery-popular-films';\n\nlet watchedMovies = [];\nlet queueMovies = [];\n\nconst libraryWrap = document.querySelector('.library-list');\nconst watchedBtn = document.querySelector('.library--btn__watched');\nconst queueBtn = document.querySelector('.library--btn__queue');\n\nwatchedBtn.addEventListener('click', onBtnWatchedClick);\nqueueBtn.addEventListener('click', onBtnQueueClick);\n\nonLibraryLinkClick();\n\nfunction onLibraryLinkClick() {\n  libraryWrap.innerHTML = ' ';\n\n  watchedMovies = JSON.parse(localStorage.getItem('watchedMovies'));\n  queueMovies = JSON.parse(localStorage.getItem('queueMovies'));\n  const noWatched = watchedMovies === null;\n  const noQueue = queueMovies === null;\n\n  if (noWatched && noQueue) {\n    libraryWrap.classList.remove('gallery');\n    watchedBtn.classList.remove('library--btn--active');\n    const emptyLibrary = `<div class=\"empty-library\"> \n    <p class=\"empty-library__title\">YOUR LIBRARY IS EMPTY!</p>\n    </div>`;\n    libraryWrap.innerHTML = emptyLibrary;\n  }\n\n  if (!noQueue) {\n    renderMarkup(queueMovies);\n  }\n\n  if (!noWatched) {\n    renderMarkup(watchedMovies);\n  }\n}\n\nfunction onBtnQueueClick() {\n  libraryWrap.innerHTML = ' ';\n  watchedBtn.classList.remove('library--btn--active');\n  queueBtn.classList.add('library--btn--active');\n\n  queueMovies = JSON.parse(localStorage.getItem('queueMovies'));\n  const noQueue = queueMovies === null || queueMovies === '[]';\n\n  if (noQueue) {\n    const emptyQueue = `<div class=\"container empty-library\"> \n        <p class=\"empty-library__title\">NO MOVIES TO WATCH IN QUEUE!</p>\n        </div>`;\n    libraryWrap.innerHTML = emptyQueue;\n  } else {\n    renderMarkup(queueMovies);\n  }\n}\n\nfunction onBtnWatchedClick() {\n  libraryWrap.innerHTML = ' ';\n  queueBtn.classList.remove('library--btn--active');\n  watchedBtn.classList.add('library--btn--active');\n\n  watchedMovies = JSON.parse(localStorage.getItem('watchedMovies'));\n  const noWatched = watchedMovies === null || watchedMovies === '[]';\n\n  if (noWatched) {\n    const emptyWatched = `<div class=\"container empty-library\">\n        <p class=\"empty-library__title\">NO MOVIES IN WATCHED!</p>\n        </div>`;\n    libraryWrap.innerHTML = emptyWatched;\n  } else {\n    renderMarkup(watchedMovies);\n  }\n}\n\nfunction renderMarkup(savedMovies) {\n  libraryWrap.innerHTML = createMarkup(savedMovies);\n  const galleryItems = document.querySelectorAll('.card-set__item');\n\n  galleryItems.forEach(card =>\n    card.removeEventListener('click', onGalleryClick)\n  );\n  galleryItems.forEach(card => card.addEventListener('click', onGalleryClick));\n}\n\nfunction createMarkup(movies) {\n  return movies\n    .map(movie => {\n      const { poster_path, title, id, genres, release_date, vote_average } =\n        movie;\n\n      const vote = vote_average.toFixed(1);\n      let formatedGenres;\n      let genresList;\n      genresList = genres.map(item => item.name).slice(0, 2);\n      if (genres.length > 2) {\n        genresList.push('Other');\n      }\n      formatedGenres = genresList.join(', ');\n      // const genresList = genres.map(item => item.name).slice(0, 2);\n      // genresList.push('Other');\n\n      // const formatedGenres = genresList.join(', ');\n      const releaseYear = release_date.slice(0, 4);\n      let formatedPosterPath = '';\n      if (poster_path === null) {\n        formatedPosterPath = 'uc4RAVW1T3T29h6OQdr7zu4Blui.jpg';\n      } else {\n        formatedPosterPath = poster_path;\n      }\n      return `\n      <li class=\"card-set__item\" id=\"${id}\">\n      <a href='#' id='${id}' class=\"card-link\">\n       <picture>\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w780/${formatedPosterPath} 1x,\n                   http://image.tmdb.org/t/p/original/${formatedPosterPath} 2x\" media=\"(min-width: 1280px)\" type=\"image/jpeg\" />\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w342/${formatedPosterPath} 1x,\n                    http://image.tmdb.org/t/p/w500/${formatedPosterPath} 2x\" media=\"(min-width: 768px)\" type=\"image/jpeg\" />\n                    <source srcset=\"\n                    http://image.tmdb.org/t/p/w185/${formatedPosterPath} 1x,\n                    http://image.tmdb.org/t/p/w342/${formatedPosterPath} 2x\" media=\"(max-width: 480px)\" type=\"image/jpeg\" />\n         <img id=\"${id}\n          loading=\"lazy\"\n          src=\"http://image.tmdb.org/t/p/w342/${formatedPosterPath}\"\n          alt=\"${title}\"\n          class=\"card-set__img \"/>\n      </picture>\n      \n    \n      <h3 class=\"card-set__title\">${title}</h3>\n      <div class=\"card-set__description\" id=\"${id}\">\n      <span class=\"card-set__genre flex\" id=\"${id}\">\n          ${formatedGenres} &nbsp| ${releaseYear}\n          <span class=\"vote\"> ${vote}</span>\n      </span>\n      \n      </div>\n      </a>\n      </li>\n      `;\n    })\n    .join('');\n}\n"],"names":["parcelRequire","$3xVQP","$2f3c0af820c0a3f0$var$watchedMovies","$2f3c0af820c0a3f0$var$queueMovies","$2f3c0af820c0a3f0$var$libraryWrap","document","querySelector","$2f3c0af820c0a3f0$var$watchedBtn","$2f3c0af820c0a3f0$var$queueBtn","$2f3c0af820c0a3f0$var$renderMarkup","savedMovies","innerHTML","map","movie","formatedGenres","genresList","poster_path","title","id","genres","release_date","vote","vote_average","toFixed","item","name","slice","length","push","join","releaseYear","formatedPosterPath","concat","galleryItems","querySelectorAll","forEach","card","removeEventListener","onGalleryClick","addEventListener","classList","remove","add","JSON","parse","localStorage","getItem","noWatched","noQueue","$2f3c0af820c0a3f0$var$onLibraryLinkClick"],"version":3,"file":"library.6f7bad27.js.map"}